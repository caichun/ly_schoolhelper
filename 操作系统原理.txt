什么是操作系统：
1、	计算机核心程序（kernel program）
2、	用户接口程序（interface program）
3、	资源分配与回收的控制程序（control program）
操作系统是位于Hardware与User之间的程序集合
操作系统是位于Hardware与User之间的程序集合
基本目标：方便性与高效性
工作原理：中断驱动
存储结构：内存，二级存储，分成结构
硬件保护：双模式，特权指令，内存，IO，CPU
服务：程序，IO，文件，进程，通信

硬件：
	启动：执行引导程序，载入operation program kernel（ROM/EPROM中）
	中断：告知操作系统执行中断处理程序/策略（interrupt/trap）
	Interrupt driven：中断-挂起-中断处理-中断返回
	通用中断功能：Interrupt service routine（由中断向量保存）、save address（程序恢复）、disable interrupt（进程同步）
Memory： 寄存器-main memory（内存）-electronic disk（U盘）-magnetic disk（磁盘）-optical disk
		内存： CPU可以直接访问的唯一的大型存储介质
IO设备：控制器local buffer和外设交互的过程（I/O过程无需CPU干预，中断响应方式）
系统保护：Dual-Mode（用户，内核态 0，1模态位）、CPU（进程时间控制 定时器）、内存（程序地址控制 基址，界限寄存器）、IO保护（全privilege）
	Privileged Instruction特权指令：可能对硬件造成伤害的指令，在内核态执行

发展：
	单任务系统、批处理系统（操作步骤写成批处理文件，程序按事先写好的批处理文件顺序执行，剔除人的因素）、多道程序系统（提高CPU利用率，发挥程序并发性，内存，CPU，任务，IO资源控制决策 道：并发执行程序个数）、分时系统（多用户共享，CPU调度，系统在用户间快速切换，virtual memory虚拟存储）
	操作系统特征：并发（Concurrence），共享（Sharing），虚拟（Virtual），异步（Asynchronism）
	CPU利用率：CPU非空闲时间占比
	Desktop System：单处理器（Single-Processor），多处理器（Multiprocessor），紧耦合（Tightly coupled），分布式（network云端，shared storage集群系统（hot-standby非对称，对称）），实时（时间约束），终端（Pocket-PC，Cellular telephone）系统
	优点：高吞吐量（Throughput），资源共享，可靠性高
功能（Functions）：
	系统内部具有的能力
	进程（Program in execution），内存（分配，回收，情况记录），磁盘（Secondary-Storage），文件（文件系统，对外屏蔽硬件），IO管理（屏蔽异步性）
	

服务（Services）：
	对外可以提供的服务
	程序执行，IO操作，文件系统操作（File-system manipulation），进程通信，错误监控
	系统执行：资源分配，审计（Accounting安全追踪，系统优化），保护

接口：
	命令行（Command-Line），批处理（Batch 配置命令文件.bat），图形用户界面（Graphical User）
	Command-line Shell命令行解释器：解读命令
	用户接口：Internal，External 内，外（繁琐）部命令
	System calls Interface系统调用（基本功能实现）
	Application Programming Interface（API）：应用程序接口，调用OS层功能（run-time support library接口使用说明）


结构（Structure）：
	简单（MS-DOS，UNIX 结构区分不明显），分层（hardware…功能模块化…user layer），微内核（Microkernels仅保留进程，内存管理和通信功能 易于扩展和移植，user和kernel转换产生额外开销），模块化（面向对象的方法，模块通过接口通信，比分层结构灵活性高）
	Virtual machine：模拟硬件，为操作系统提供illusion hardware interface，虚拟机间资源不共享


设计：
	Policy（策略 做什么），Mechanism（机制 怎么做）
	C，C++，汇编
	

什么是进程：
	执行中的程序按照顺序结构（非一一对应）
	程序代码，程序计数器，执行内容


